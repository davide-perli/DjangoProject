# Generated by Django 4.2.11 on 2024-11-21 16:06

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alergeni',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nume_alergeni', models.CharField(choices=[('LACTOZA', 'lactoza'), ('GLUTEN', 'gluten'), ('ALUNE', 'alune'), ('NONE', 'none')], default='NONE')),
            ],
        ),
        migrations.CreateModel(
            name='Bauturi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bautura', models.CharField(choices=[('CAFEA', 'cafea'), ('CEAI', 'ceai'), ('LAPTE', 'lapte'), ('MILKSHAKE', 'milkshake'), ('COCA-COLA', 'coca-cola'), ('PEPSI', 'pepsi'), ('FANTA', 'fanta'), ('LIPTON', 'lipton')], default='CAFEA')),
                ('temperatura', models.CharField(choices=[('RECE', 'rece'), ('CAMEREI', 'camerei'), ('CALDA', 'calda')], default='CAMEREI')),
            ],
        ),
        migrations.CreateModel(
            name='Biscuite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tip_biscuite', models.CharField(choices=[('CIOCOLATA', 'ciocolata'), ('CIOCOLATA ALBA', 'ciocolata alba'), ('GRAHAM', 'graham'), ('DIGESTIVI', 'digestivi'), ('UNT', 'unt')], default='CIOCOLATA')),
            ],
        ),
        migrations.CreateModel(
            name='Informatii',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specificatii', models.CharField(blank=True, max_length=250)),
                ('descriere', models.TextField(blank=True, null=True)),
                ('pret', models.DecimalField(decimal_places=2, max_digits=5, null=True)),
                ('alergeni', models.ManyToManyField(to='gelaterie.alergeni')),
            ],
        ),
        migrations.CreateModel(
            name='Inghetata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inghetata', models.CharField(choices=[('GELATO', 'gelato'), ('SORBET', 'sorbet')], default='GELATO')),
                ('aroma', models.CharField(choices=[('CIOCOLATA', 'ciocolata'), ('CIOCOLATA ALBA', 'ciocolata alba'), ('VANILIE', 'vanilie'), ('FISTIC', 'fistic'), ('COOKIES ADN CREAM', 'cookies and cream'), ('CARAMEL', 'caramel'), ('KINDER', 'kinder'), ('BUBBLEGUM', 'bubblegum'), ('ALUNE', 'alune'), ('CASTANE', 'castane'), ('PEPENE', 'pepene'), ('BANANA', 'banana'), ('CIRESE', 'cirese'), ('PIERSICI', 'piersici'), ('LAMAIE', 'lamaie')], default='CIOCOLATA')),
                ('mod_servire', models.CharField(choices=[('CON', 'con'), ('CUPA', 'cupa')], default='CON')),
                ('info', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gelaterie.informatii')),
            ],
        ),
        migrations.CreateModel(
            name='Magazine',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('nume_magazin', models.CharField(max_length=50)),
                ('descriere', models.TextField(blank=True, null=True)),
                ('orar', models.DateField(null=True)),
                ('email_magazin', models.EmailField(max_length=254, null=True)),
                ('numar_telefon_magazin', models.BigIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sponsor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nume_sponsor', models.CharField(max_length=100)),
                ('email_sponsor', models.EmailField(max_length=254, null=True)),
                ('numar_telefon_sponsor', models.BigIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Torturi_Inghetata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nume_tort', models.CharField(choices=[('MOUSSE', 'mousse'), ('SACHER', 'sacher'), ('RED VELVET', 'red velvet'), ('BLACK FOREST', 'black forest')], default='MOUSSE')),
                ('info', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gelaterie.informatii')),
                ('magazin', models.ManyToManyField(to='gelaterie.magazine')),
            ],
        ),
        migrations.CreateModel(
            name='Prajituri',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nume_prajitura', models.CharField(choices=[('MOUSSE', 'mousse'), ('LAVACAKE', 'lavacake'), ('PROFITEROL', 'profiterol'), ('TARTE FRUCTE', 'tarte fructe'), ('CREME BRULEE', 'creme brulee'), ('ECLAIR', 'eclair'), ('MACAROONS', 'macaroons'), ('RED VELVET', 'red velvet')], default='MOUSSE')),
                ('info', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gelaterie.informatii')),
                ('magazin', models.ManyToManyField(to='gelaterie.magazine')),
            ],
        ),
        migrations.CreateModel(
            name='Meniu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bauturi', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gelaterie.bauturi')),
                ('biscuiti', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gelaterie.biscuite')),
                ('inghetata', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gelaterie.inghetata')),
                ('prajituri', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gelaterie.prajituri')),
                ('torturi_inghetata', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='gelaterie.torturi_inghetata')),
            ],
        ),
        migrations.AddField(
            model_name='magazine',
            name='sponsor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gelaterie.sponsor'),
        ),
        migrations.AddField(
            model_name='inghetata',
            name='magazin',
            field=models.ManyToManyField(to='gelaterie.magazine'),
        ),
        migrations.CreateModel(
            name='Comanda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_achizitie', models.DateField(default=django.utils.timezone.now)),
                ('livrare_curier', models.BooleanField(default=True)),
                ('informatii', models.ManyToManyField(blank=True, to='gelaterie.informatii')),
            ],
        ),
        migrations.AddField(
            model_name='biscuite',
            name='info',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gelaterie.informatii'),
        ),
        migrations.AddField(
            model_name='biscuite',
            name='magazin',
            field=models.ManyToManyField(to='gelaterie.magazine'),
        ),
        migrations.AddField(
            model_name='bauturi',
            name='info',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='gelaterie.informatii'),
        ),
        migrations.AddField(
            model_name='bauturi',
            name='magazin',
            field=models.ManyToManyField(to='gelaterie.magazine'),
        ),
        migrations.CreateModel(
            name='Adresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tara', models.CharField(max_length=50)),
                ('oras', models.CharField(max_length=50)),
                ('strada', models.CharField(max_length=150)),
                ('magazin', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='gelaterie.magazine')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telefon', models.CharField(blank=True, max_length=15)),
                ('adresa', models.CharField(blank=True, max_length=150)),
                ('age', models.SmallIntegerField(null=True)),
                ('sex', models.CharField(choices=[('BARBAT', 'barbat'), ('FEMEIE', 'femeie'), ('NONE', 'none')], default='NONE')),
                ('nationalitate', models.CharField(blank=True, max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
